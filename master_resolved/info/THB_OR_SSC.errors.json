{
  "Epoch": {
    "ISTP.DISPLAY_TYPEEmpty": "Epoch DISPLAY_TYPE.strip() = ''. Removing attribute DISPLAY_TYPE."
  },
  "RADIUS": {
    "ISTP.DISPLAY_TYPEUnknown": "RADIUS DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GSE_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "GSE_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GSE_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "GSE_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GSE_LCT_T": {
    "ISTP.DISPLAY_TYPEUnknown": "GSE_LCT_T DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GSM_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "GSM_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GSM_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "GSM_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SM_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "SM_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SM_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "SM_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SM_LCT_T": {
    "ISTP.DISPLAY_TYPEUnknown": "SM_LCT_T DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "XYZ_GEO": {
    "ISTP.DISPLAY_TYPEUnknown": "XYZ_GEO DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower().",
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "GEO_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "GEO_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GEO_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "GEO_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GEO_LCT_T": {
    "ISTP.DISPLAY_TYPEUnknown": "GEO_LCT_T DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GEO_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GEO_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GEO_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GEO_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GEO_ARCLEN": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GEO_ARCLEN DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GEO_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GEO_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GEO_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GEO_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GEO_ARCLEN": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GEO_ARCLEN DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GM_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "GM_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "GM_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "GM_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GM_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GM_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GM_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GM_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NorthBtrace_GM_ARCLEN": {
    "ISTP.DISPLAY_TYPEUnknown": "NorthBtrace_GM_ARCLEN DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GM_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GM_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GM_LON": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GM_LON DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "SouthBtrace_GM_ARCLEN": {
    "ISTP.DISPLAY_TYPEUnknown": "SouthBtrace_GM_ARCLEN DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "MAG_STRTH": {
    "ISTP.DISPLAY_TYPEUnknown": "MAG_STRTH DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "DNEUTS": {
    "ISTP.DISPLAY_TYPEUnknown": "DNEUTS DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "BOW_SHOCK": {
    "ISTP.DISPLAY_TYPEUnknown": "BOW_SHOCK DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "MAG_PAUSE": {
    "ISTP.DISPLAY_TYPEUnknown": "MAG_PAUSE DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "L_VALUE": {
    "ISTP.DISPLAY_TYPEUnknown": "L_VALUE DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower().",
    "ISTP.UNITS": "VAR_TYPE = 'data' and UNITS.strip() = ''. Setting UNITS = None"
  },
  "INVAR_LAT": {
    "ISTP.DISPLAY_TYPEUnknown": "INVAR_LAT DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "MAG_Y": {
    "ISTP.DISPLAY_TYPEUnknown": "MAG_Y DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "MAG_Z": {
    "ISTP.DISPLAY_TYPEUnknown": "MAG_Z DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "cartesian": {
    "ISTP.DISPLAY_TYPEUnknown": "cartesian DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "xyz_lbl": {
    "ISTP.DISPLAY_TYPEUnknown": "xyz_lbl DISPLAY_TYPE = 'TIME_SERIES' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "XYZ_GSE": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GSEO": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GSM": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GSMO": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_SM": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_SMO": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GEOO": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GM": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  },
  "XYZ_GMO": {
    "CDF.InvalidDependPtrVarType": "Variable has DEPEND_1 = 'cartesian' with VAR_TYPE = 'data' which is not 'support_data'.",
    "CDF.DEPENDsEqualLABL_PTR": "DEPEND == LABL_PTR. Removing redundant DEPEND and DEPEND_{1,2,3}"
  }
}