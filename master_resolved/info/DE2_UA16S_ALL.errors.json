{
  "OrbitNumber": {
    "ISTP.DISPLAY_TYPEUnknown": "OrbitNumber DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower().",
    "ISTP.UNITS": "VAR_TYPE = 'data' and UNITS.strip() = ''. Setting UNITS = None"
  },
  "NACS_N2density": {
    "ISTP.DISPLAY_TYPEUnknown": "NACS_N2density DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NACS_Odensity": {
    "ISTP.DISPLAY_TYPEUnknown": "NACS_Odensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NACS_HEdensity": {
    "ISTP.DISPLAY_TYPEUnknown": "NACS_HEdensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NACS_ARdensity": {
    "ISTP.DISPLAY_TYPEUnknown": "NACS_ARdensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "NACS_Ndensity": {
    "ISTP.DISPLAY_TYPEUnknown": "NACS_Ndensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "WATS_TNneutralTemperature": {
    "ISTP.DISPLAY_TYPEUnknown": "WATS_TNneutralTemperature DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "WATS_NVEneutralWind": {
    "ISTP.DISPLAY_TYPEUnknown": "WATS_NVEneutralWind DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "WATS_NVUneutralWind": {
    "ISTP.DISPLAY_TYPEUnknown": "WATS_NVUneutralWind DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "LANG_NPplasmaDensity": {
    "ISTP.DISPLAY_TYPEUnknown": "LANG_NPplasmaDensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "LANG_TEelectronTemp": {
    "ISTP.DISPLAY_TYPEUnknown": "LANG_TEelectronTemp DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "FPI_FWAVwavelength": {
    "ISTP.DISPLAY_TYPEUnknown": "FPI_FWAVwavelength DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "FPI_FALTtangentAlt": {
    "ISTP.DISPLAY_TYPEUnknown": "FPI_FALTtangentAlt DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "FPI_FVNneutralwind": {
    "ISTP.DISPLAY_TYPEUnknown": "FPI_FVNneutralwind DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "FPI_FTEMneutralTemp": {
    "ISTP.DISPLAY_TYPEUnknown": "FPI_FTEMneutralTemp DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "FPI_RAYintensity": {
    "ISTP.DISPLAY_TYPEUnknown": "FPI_RAYintensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "RPA_TIionTemp": {
    "ISTP.DISPLAY_TYPEUnknown": "RPA_TIionTemp DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "RPA_NIionDensity": {
    "ISTP.DISPLAY_TYPEUnknown": "RPA_NIionDensity DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "RPA_IVEionDrift": {
    "ISTP.DISPLAY_TYPEUnknown": "RPA_IVEionDrift DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "RPA_IVNionDrift": {
    "ISTP.DISPLAY_TYPEUnknown": "RPA_IVNionDrift DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "RPA_IVUionDrift": {
    "ISTP.DISPLAY_TYPEUnknown": "RPA_IVUionDrift DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "alt": {
    "ISTP.DISPLAY_TYPEUnknown": "alt DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "glat": {
    "ISTP.DISPLAY_TYPEUnknown": "glat DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "glon": {
    "ISTP.DISPLAY_TYPEUnknown": "glon DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "lst": {
    "ISTP.DISPLAY_TYPEUnknown": "lst DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "lmt": {
    "ISTP.DISPLAY_TYPEUnknown": "lmt DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "L": {
    "ISTP.DISPLAY_TYPEUnknown": "L DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower().",
    "ISTP.UNITS": "VAR_TYPE = 'data' and UNITS.strip() = ''. Setting UNITS = None"
  },
  "ilat": {
    "ISTP.DISPLAY_TYPEUnknown": "ilat DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "sza": {
    "ISTP.DISPLAY_TYPEUnknown": "sza DISPLAY_TYPE = 'time_series ' is not in list of known display types. Will attempt to infer using DISPLAY_TYPE.strip().lower()."
  },
  "Epoch": {
    "VOUnits.NotFound": "Did not find mapping from CDAWeb unit = 'ms (UT) ' to VO_UNIT in additions['Units']",
    "CDF.MissingLABL_PTR": "For VAR_TYPE = 'data' or 'support_data', if no LABLAXIS, LABL_PTR_i is required."
  }
}